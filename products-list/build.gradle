plugins {
  id 'application'
  id "com.google.protobuf" version "$protobufGradlePluginVersion"
  id 'jacoco'
  id 'java'
}

group = 'com.github.zeroberto.productsstore'
version = '1.0.0'
sourceCompatibility = '14'
targetCompatibility = '14'

repositories {
  mavenCentral()
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.enabled false
    csv.enabled false
    html.destination file("${buildDir}/jacocoHtml")
  }
}

application {
  mainClassName = 'com.github.zeroberto.productsstore.Application'
}

run {
  systemProperty 'profile', System.getProperty('profile', '')
}

jar {
  archiveFileName = 'app.jar'
  manifest {
    attributes(
      'Main-Class': "${application.mainClassName}"
    )
  }
}

distributions {
  main {
    distributionBaseName = 'app'
    version = ''
    distZip.enabled = false
  }
  tasks.withType(Tar) {
    compression = Compression.GZIP
  }
}

sourceSets {
  main {
    proto {
      srcDir 'src/main/protobuf/proto/discountcalculator'
      srcDir 'src/main/protobuf/proto/productslist'
    }
    java {
      srcDir 'build/generated/source/proto/main/grpc'
      srcDir 'build/generated/source/proto/main/java'
    }
  }
  integTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/integTest/java')
    }
    resources.srcDir file('src/integration-test/resources')
  }
}

configurations {
  integTestAnnotationProcessor.extendsFrom testAnnotationProcessor
  integTestCompileOnly.extendsFrom testCompileOnly
  integTestImplementation.extendsFrom testImplementation
}

task integTest(type: Test) {
  group "verification"
  testClassesDirs = sourceSets.integTest.output.classesDirs
  classpath = sourceSets.integTest.runtimeClasspath
  outputs.upToDateWhen { false }

  useJUnitPlatform()

  testLogging {
    events "passed", "skipped", "failed"
  }
}

check.dependsOn integTest
integTest.mustRunAfter test

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:$protobufProtocVersion"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:$protocGenGrpcJavaVersion"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}

dependencies {
  annotationProcessor "org.projectlombok:lombok:$lombokVersion"

  compileOnly "org.apache.tomcat:annotations-api:$annotationsApiVersion"
  compileOnly "org.projectlombok:lombok:$lombokVersion"

  implementation "io.grpc:grpc-netty-shaded:$protobufVersion"
  implementation "io.grpc:grpc-protobuf:$protobufVersion"
  implementation "io.grpc:grpc-stub:$protobufVersion"
  implementation "javax.annotation:javax.annotation-api:$javaxAnnotationApiVersion"
  implementation "org.yaml:snakeyaml:$snakeyamlVersion"
  implementation "org.mongodb:mongodb-driver:$mongoDriverVersion"

  testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
  testCompileOnly "org.projectlombok:lombok:$lombokVersion"
  testImplementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
  testImplementation "org.mockito:mockito-inline:$mockitoVersion"
  testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"

  integTestAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
  integTestCompileOnly "org.projectlombok:lombok:$lombokVersion"
  integTestImplementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
  integTestImplementation "org.mockito:mockito-inline:$mockitoVersion"
  integTestImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
  integTestImplementation "org.postgresql:postgresql:42.2.17"
}
