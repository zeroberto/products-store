package datastore

import "github.com/zeroberto/products-store/discount-calculator/model"

// ProductDataStore represents the product data access interface
type ProductDataStore interface {
	// FindByID is responsible for obtaining a product according to the given identifier
	FindByID(ID string) (*model.Product, error)
}

// UserDataStore represents the user data access interface
type UserDataStore interface {
	// FindByID is responsible for obtaining an user according to the given identifier
	FindByID(ID int64) (*model.User, error)
}

// Error is responsible for encapsulating errors generated by operations in the data access layer
type Error struct {
	Cause error
}

func (err *Error) Error() string {
	return err.Cause.Error()
}
